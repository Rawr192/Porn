name: Download from MEGA.nz

on:
  workflow_dispatch:
    inputs:
      mega_urls:
        description: 'MEGA.nz URLs to download (up to 5, separated by commas or spaces)'
        required: true
      maximize_disk_space:
        description: Maximize disk space. Check if getting out of disk space error
        type: boolean

jobs:
  download:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Maximize disk space
      if: inputs.maximize_disk_space
      uses: easimon/maximize-build-space@v10
      with:
        remove-dotnet: true
        remove-android: true
        remove-haskell: true
        remove-codeql: true
        remove-docker-images: true
        
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install MEGAcmd
      run: |
        sudo apt-get update
        sudo apt-get install -y wget lsb-release
        UBUNTU_VERSION=$(lsb_release -rs)
        wget "https://mega.nz/linux/repo/xUbuntu_${UBUNTU_VERSION}/amd64/megacmd-xUbuntu_${UBUNTU_VERSION}_amd64.deb"
        sudo apt install -y "./megacmd-xUbuntu_${UBUNTU_VERSION}_amd64.deb"

    - name: Verify MEGAcmd installation
      run: mega-version
        
    - name: Download from MEGA.nz
      run: |
        # Replace commas with spaces, then split on spaces
        URLS=$(echo "${{ inputs.mega_urls }}" | tr ',' ' ')
        for url in $URLS; do
          mega-get "$url"
        done
    
    - name: List files
      run: ls -la

    - name: Sanitize and upload files
      run: |
        shopt -s nullglob
        gh release create mega-downloads --title "mega-downloads" --notes "mega-downloads" || true
        for file in *; do
          if [[ -f "$file" ]]; then
            # Sanitize the file name
            sanitized_file=$(echo "$file" | sed 's/[^a-zA-Z0-9._-]/_/g')
            if [ "$file"!= "$sanitized_file" ]; then
              mv "$file" "$sanitized_file"
              file="$sanitized_file"
            fi

            # Check if the file already exists in the release
            while gh release view mega-downloads --json assets | jq -e ".assets[] | select(.name == \"$file\")" > /dev/null; do
              # Rename the file by appending a number
              base="${file%.*}"
              ext="${file##*.}"
              count=1
              new_file="${base}_$count.$ext"
              while [[ -f "$new_file" ]]; do
                count=$((count + 1))
                new_file="${base}_$count.$ext"
              done
              mv "$file" "$new_file"
              file="$new_file"
            done

            filesize=$(stat -c%s "$file")
            if [ "$filesize" -gt 2000000000 ]; then
              split -b 2000m "$file" "${file}."
              for part in "${file}."*; do
                echo "Uploading $part"
                gh release upload "mega-downloads" "$part" --clobber
              done
              rm "$file"
            else
              echo "Uploading $file"
              gh release upload "mega-downloads" "./$file" --clobber
            fi
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: List files after processing
      run: ls -la
